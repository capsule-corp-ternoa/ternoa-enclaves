# Rust manifest example

loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "{{ self_exe }}"
loader.log_level = "{{ log_level }}"

loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}"

# See https://gramine.readthedocs.io/en/latest/devel/performance.html#glibc-malloc-tuning
loader.env.MALLOC_ARENA_MAX = "1"

# For easier debugging â€” not strictly required to run this workload
loader.env.RUST_BACKTRACE = "full"

# MOUNTING FROM "URI" ON HOST, TO "PATH" ON GRAMINE
# TYPE can be chroot, encrypted, tmpfs(in-memory)
fs.mounts = [
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
  { path = "/etc", uri = "file:/etc" },
  { path = "/temporary", type = "tmpfs" },
  { path = "/quote", uri = "file:{{ quote_path }}", type = "chroot" },
  { path = "/keys", uri = "file:{{ credentials_path }}/keys", type = "chroot" },
  { path = "/certificates", uri = "file:{{ credentials_path }}/certificates", type = "_sgx_mrenclave" },
  { path = "/nft" , uri = "file:{{ seal_path }}",  type = "encrypted", "key_name" = "_sgx_mrenclave"},
]

sgx.allowed_files = [
  "file:{{ quote_path }}/",
]

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ self_exe }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/etc/nsswitch.conf",
  "file:/etc/host.conf",
  "file:/etc/resolv.conf",
  "file:/etc/hosts",
  "file:/etc/group",
  "file:/etc/passwd",
  "file:/etc/gai.conf",
  "file:/etc/localtime",
  "file:/etc/ssl/certs/ca-certificates.crt",
  "file:bin/checksum",
  "file:bin/sgx_server.sig",
  "file:{{ credentials_path }}/keys/cosign.pub",
]

# TODO: REMOVE INSECURE OPTIONS

# The Tokio runtime requires eventfd, and the Gramine implementation
# currently relies on the host in an insecure manner. This setting isn't
# suitable for production deployment, but works well as a stopgap during
# development while a proper implementation in Gramine is being worked on.
sys.insecure__allow_eventfd = true

sgx.enclave_size = "1G"
sgx.thread_num = 24
#sgx.insecure__rpc_thread_num = 24
sgx.debug = true
sgx.nonpie_binary = true
loader.insecure__use_cmdline_argv = true
loader.pal_internal_mem_size = "128M"

sgx.require_avx    = true
#sgx.require_avx512 = true
#sgx.require_mpx    = true
#sgx.require_pkru   = true
#sgx.require_amx    = true
#sgx.require_exinfo = true

#sgx.file_check_policy = "allow_all_but_log" #"strict"

# TODO: PRODUCTION SPID
sgx.remote_attestation = "epid"
sgx.ra_client_spid = "15AD86B4CFA46B327A8BFB79AA0D67B7"
sgx.ra_client_linkable = true

sgx.isvprodid = 11
sgx.isvsvn    = 102