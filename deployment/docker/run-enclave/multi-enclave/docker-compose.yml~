version: '3.9'

networks:
  enclaves:
    driver: bridge

services:

  reverse-proxy:
    image: traefik:latest
    container_name: reverse_proxy
    command:
      - --providers.docker=true
      - --log.level=DEBUG
      - --api.insecure=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.letsencc.address=:443
    labels:
      - traefik.http.routers.cxny-https.entrypoints=https
      - traefik.http.routers.cxny-https.rule=HostSNI(`*`)
      - traefik.http.routers.cxny-https.tls.passthrough=true
      - traefik.http.routers.cxny-https.service=cxny-svc
      - traefik.http.services.cxny-svc.loadbalancer.server.scheme=https
      - traefik.http.services.cxny-svc.loadbalancer.server.port=443

    ports:
      - published: 443 # change here to 8443
        target: 443
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - enclaves

# --------------------------------
#          ENCLAVE 1
# --------------------------------
      
  ternoa-enclave-c0n1:
    image: "capsulecorpternoa/ternoa-enclaves:${ENCLAVE_VERSION}"
    pull_policy: if_not_present
    container_name: "${ENCLAVE_VERSION}_C0N1"
    command:
      - "--domain"
      - "$ENCLAVE_DOMAIN"
      - "--port"
      - "$ENCLAVE1_PORT"
      - "--verbose" 
      - "${ENCLAVE_VERBOSE:-3}"
    ports:
      - "${ENCLAVE1_PORT}:${ENCLAVE1_PORT}/tcp"
    volumes:
      - /run/aesmd:/run/aesmd
    devices:
      - /dev/sgx_enclave
    dns:
      - ${ENCLAVE_DNS}
    networks:
      - enclaves
    healthcheck:
      test: /bin/sh -c "curl -k https://$ENCLAVE_DOMAIN:$ENCLAVE1_PORT/api/health"
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 0s
      #start_interval: 30s

# --------------------------------
#          ENCLAVE 2
# --------------------------------

  ternoa-enclave-c1n1:
    image: "capsulecorpternoa/ternoa-enclaves:${ENCLAVE_VERSION}"
    pull_policy: if_not_present
    container_name: "${ENCLAVE_VERSION}_C1N1"
    command:
      - "--domain"
      - "$ENCLAVE_DOMAIN"
      - "--port"
      - "$ENCLAVE2_PORT"
      - "--verbose" 
      - "${ENCLAVE_VERBOSE:-3}"
    ports:
      - "${ENCLAVE2_PORT}:${ENCLAVE2_PORT}/tcp"
    volumes:
      - /run/aesmd:/run/aesmd
    devices:
      - /dev/sgx_enclave
    dns:
      - ${ENCLAVE_DNS}
    networks:
      - enclaves
    depends_on:
      ternoa-enclave-c0n1:
        condition: service_healthy
    healthcheck:
      test: /bin/sh -c "curl -k https://$ENCLAVE_DOMAIN:$ENCLAVE2_PORT/api/health"
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 30s
      #start_interval: 30s
      
# --------------------------------
#          ENCLAVE 3
# --------------------------------

  ternoa-enclave-c2n1:
    image: "capsulecorpternoa/ternoa-enclaves:${ENCLAVE_VERSION}"
    pull_policy: if_not_present
    container_name: "${ENCLAVE_VERSION}_C2N1"
    command:
      - "--domain"
      - "$ENCLAVE_DOMAIN"
      - "--port"
      - "$ENCLAVE3_PORT"
      - "--verbose" 
      - "${ENCLAVE_VERBOSE:-3}"
    ports:
      - "${ENCLAVE3_PORT}:${ENCLAVE3_PORT}/tcp"
    volumes:
      - /run/aesmd:/run/aesmd
    devices:
      - /dev/sgx_enclave
    dns:
      - ${ENCLAVE_DNS}
    networks:
      - enclaves
      
    depends_on:
      ternoa-enclave-c1n1:
        condition: service_healthy

    healthcheck:
      test: /bin/sh -c "curl -k https://$ENCLAVE_DOMAIN:$ENCLAVE3_PORT/api/health"
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 60s
      #start_interval: 30s
